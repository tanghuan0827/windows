  sed
  通过输入读取文件内容，但一次仅读取一行内容进行某些指令处理后输出，sed更适合于处理大数据文件。
  替换字符串————sed -i "s/,,//g" file.txt
  替换空格————sed s/[[:space:]]//g file.txt
  删除行————sed '/^$/d' file.txt
  删除最后一行————sed -i '$d' file.txt
  
  
  ============================================================
  awk
  切分————就是把文件逐行的读入，以空格为默认的分隔符将进行切片，
  切开的部分在进行各种分析处理。
  获取第一列————awk -F, '{print $1}' file.txt 
  对文件进行拆分，以空行进行拆分,文件序号从1开始———— awk 'BEGIN{RS="\n\n"}{i++}{print > "pre_"i}' file.txt
  获取最后一行的内容————awk 'NF{a=$0}END{print a}' file.txt
  
  将awk执行后的结构输出到文本
  命令awk输出结果到一个文件  > file.txt
  可以在两列之间添加各种字符内容
  awk -F, '{print $2" "$3}' file.txt > file2.txt
  
  对特定的列的特定值进行完全替换
  awk 'BEGIN{FS=OFS=","}{if($3=="int"){$3="integer"};print}'  file.txt >file2.txt
  
  ============================================================
  grep
  显示匹配一个或者多个模式的文本行
  在某个目录下有多少个包含hello的文件————ls -l | grep hello |wc -l 
  获取字符串的长度————echo str | wc -L
  
  
  ============================================================
  cat
  读取文本————cat file.txt
  将几个文本拼接————
  cat file1.txt>file.txt
  cat file2.txt>>file.txt
  cat file3.txt>>file.txt
  ————
  将多行显示为一行———— cat file.txt |xargs
  ————
  cat file.txt | while read myline1
  do
  
  done
  
  ============================================================
  截取字符串
  
  截取到倒数第2个
  ${last_row_content:0:$(($last_row_length-1))}
  
  ============================================================
  wc
  获取字符串的长度————echo str |wc -L
  
  ============================================================
  echo  
  控制台打印————echo $i
  将内容输入到文本————echo str>>file.txt
  将空行输入到一个文本中————echo>> file.txt
  
  $符号 添加到文本 前面必须加\符号为  \$
  
  ============================================================
  清空一个文本
  > file.txt
  
  ============================================================
  rm
  删除一个文件
  rm -rf file.txt
  
  ============================================================
  关于字符串 数字 转换
  i="1"
  echo $(($i+1))
  
  ============================================================
  变量拼接直接
  ${}${}
  变量和字符串的拼接 ${}str    ${}"str"
  
  ============================================================
  ${}   $(())  $之间的区别
  $(())用于计算
  ${}  $代表变量
  

  ============================================================
  当前文件夹  
  获取当前文件夹的绝对路径
  work_path=$(dirname $0)
  cd $work_path
  pre_name=`pwd`
  
  当前目录的下一层文件夹
  pre_name_temp=${pre_name}/temp
  
  ============================================================
  数组形式 () 以空格进行分隔 数组序号从0开始
  (m1 m2 m3)
  for i in ${!arr[@]}
  do
	${arr[$i]}
  done
  
  ============================================================
  关于序号的for循环  数组循环下标从0开始
  for i in `seq 1 100`
  do
	$i
	${arr[$(($i-1))]}
  done
  
  ============================================================
  判断文件是否存在
  if [ -d $pre_name_temp ];then
  
  fi 
  
  判断文件是否不存在
  if [ ! -f $pre_name_temp ];then
  
  fi
  
  判断两个字符串是否相等
  if [ "$myline" = "," ];then
	
  elif [    ];then
  
  else
  
  fi
  
  ============================================================
  将一个文本的最后一行的最后一个字符删除
  先获取最后一行内容，截取到倒数第二个
  删除最后一行
  将最后一行的内容放入到文本中
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  