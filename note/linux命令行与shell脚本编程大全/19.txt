初识sed和gawk

学习sed编辑器
gawk编辑器入门
sed编辑器基础

sed不会修改文本内容

sed用于替换
sed -e 's/brown/green/; s/dog/cat/' data1.txt

sed -e '
> s/brown/green/
> s/fox/elephant/
> s/dog/cat/' data1.txt

sed -f script1.sed data1.txt

gawk  
定义变量来保存数据
使用算术和字符串来处理数据
使用结构化编程概念
通过提取数据文件中的数据元素，将其重新排列或格式化

从命令行读取程序脚本
gawk '{print $1}' data2.txt

分列按照指定分隔符来分列
gawk -F: '{print $1}' /etc/passwd

可以给第四个赋值
echo "My name is Rich" | gawk '{$4="Christina"; print $0}'

gawk '{
$4="Christina"
print $0}'
My name is Rich


cat script2.gawk 
{print $1 "'s home directory is " $6}

gawk -F: -f script2.gawk /etc/passwd

============================================================
vim script4.gawk 
BEGIN {
print "The latest list of users and shells"
printf "%-20s \t %-20s\n" ,"UserID" , "Shell"
print "----------\t -----------"
FS=":"
}

{
printf "%-20s \t %-20s\n", $1,  $7
}

END {
print "This concludes the listing"
}


gawk -f script4.gawk /etc/passwd
============================================================

19.2 sed编辑基础

p能选出被替换的行
sed -n 's/test/trial/p' data5.txt

sed也能使用其他的分隔符作为分隔符来替换
sed 's!/bin/bash!/bin/mmm!' /etc/passwd

sed编辑器中使用的命令会作用于文本数据的所有行。如果只想命令
作用于特定的行或某些行，则必须用行寻址

只替换第2行的内容
sed '2s/dog/cat/' data1.txt
sed '2,3s/dog/cat/' data1.txt
sed '2,$s/dog/cat/' data1.txt

sed删除行数据
 sed '3d' data6.txt
 sed '2,3d' data6.txt
 sed '3,$d' data6.txt

 删除指定行之间的行
sed '/1/,/3/d' data6.txt

插入 insert 会在指定行前增加一个新行
附加 append 会在指定行后增加一个新行

sed '3a\
This is an inserted line.' data6.txt
sed '3i\
This is an inserted line.' data6.txt

sed 'y/123/789/' data6.txt

一行行号 一行内容
sed '=' data6.txt 

显示所有的转义字符
sed -n 'l' data6.txt


将截取的行放到另外一个文本中
 sed '1,2w test.txt' data6.txt














































